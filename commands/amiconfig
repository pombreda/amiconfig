#!/usr/conary/bin/python2.6
#
# Copyright (c) SAS Institute Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


import logging
import os
import sys
from optparse import OptionParser, Option

optionsTable = [
    Option('--debug', action="store_true",
        help="Run in debugging mode"),
    Option('--probe', action="store_true",
        help="Probe if the metadata service is available"),
]
optparser = OptionParser(option_list=optionsTable)
options, args = optparser.parse_args()

logging.basicConfig(
        level=(options.debug and logging.DEBUG) or logging.WARNING,
        format="%(asctime)s %(levelname)s %(name)s: %(message)s")
logger = logging.getLogger()

if options.probe:
    vmwarecmd = '/usr/bin/vmware-toolbox-cmd'
    if os.path.exists(vmwarecmd):
        import subprocess
        PIPE = subprocess.PIPE
        cmd = [ vmwarecmd, 'stat', 'sessionid' ]
        p = subprocess.Popen(cmd, stdout=PIPE, stderr=PIPE)
        stdout, stderr = p.communicate()
        if p.returncode == 0 and stdout.strip():
            # Running in vmware
            sys.exit(0)
    try:
        from amiconfig import metadataservice
    except ImportError, e:
        logger.error("Unable to import amiconfig module: %s", e)
        sys.exit(10)
    ms = metadataservice.MetadataService()
    canConnect = ms.canConnect()
    sys.exit(not canConnect)

from amiconfig import AMIConfig

try:
    from conary.lib import util
    sys.excepthook = util.genExcepthook(debug=options.debug)
except ImportError:
    pass

from amiconfig.lib import log
from conary.lib import log as clog
clog.setVerbosity(clog.DEBUG)
clog.syslog = log.info
clog.debug = log.info

amiConfig = AMIConfig(debug=options.debug)
sys.exit(amiConfig.configure())
